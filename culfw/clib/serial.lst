   1               		.file	"serial.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.comm	input_handle_func,2,1
   8               		.comm	output_flush_func,2,1
   9               		.comm	usbinfunc,2,1
  10               		.text
  11               	.global	__vector_21
  13               	__vector_21:
  14 0000 1F92      		push r1
  15 0002 0F92      		push r0
  16 0004 0090 5F00 		lds r0,95
  17 0008 0F92      		push r0
  18 000a 1124      		clr __zero_reg__
  19 000c 0F93      		push r16
  20 000e 1F93      		push r17
  21 0010 2F93      		push r18
  22 0012 3F93      		push r19
  23 0014 4F93      		push r20
  24 0016 5F93      		push r21
  25 0018 6F93      		push r22
  26 001a 7F93      		push r23
  27 001c 8F93      		push r24
  28 001e 9F93      		push r25
  29 0020 AF93      		push r26
  30 0022 BF93      		push r27
  31 0024 EF93      		push r30
  32 0026 FF93      		push r31
  33 0028 CF93      		push r28
  34 002a DF93      		push r29
  35 002c CDB7      		in r28,__SP_L__
  36 002e DEB7      		in r29,__SP_H__
  37               	/* prologue: Signal */
  38               	/* frame size = 0 */
  39               	/* stack size = 19 */
  40               	.L__stack_usage = 19
  41 0030 8091 0000 		lds r24,TTY_Tx_Buffer+2
  42 0034 8823      		tst r24
  43 0036 01F0      		breq .L2
  44 0038 06EC      		ldi r16,lo8(-58)
  45 003a 10E0      		ldi r17,0
  46 003c 80E0      		ldi r24,lo8(TTY_Tx_Buffer)
  47 003e 90E0      		ldi r25,hi8(TTY_Tx_Buffer)
  48 0040 0E94 0000 		call rb_get
  49 0044 F801      		movw r30,r16
  50 0046 8083      		st Z,r24
  51 0048 00C0      		rjmp .L1
  52               	.L2:
  53 004a 81EC      		ldi r24,lo8(-63)
  54 004c 90E0      		ldi r25,0
  55 004e 21EC      		ldi r18,lo8(-63)
  56 0050 30E0      		ldi r19,0
  57 0052 F901      		movw r30,r18
  58 0054 2081      		ld r18,Z
  59 0056 2F7D      		andi r18,lo8(-33)
  60 0058 FC01      		movw r30,r24
  61 005a 2083      		st Z,r18
  62               	.L1:
  63               	/* epilogue start */
  64 005c DF91      		pop r29
  65 005e CF91      		pop r28
  66 0060 FF91      		pop r31
  67 0062 EF91      		pop r30
  68 0064 BF91      		pop r27
  69 0066 AF91      		pop r26
  70 0068 9F91      		pop r25
  71 006a 8F91      		pop r24
  72 006c 7F91      		pop r23
  73 006e 6F91      		pop r22
  74 0070 5F91      		pop r21
  75 0072 4F91      		pop r20
  76 0074 3F91      		pop r19
  77 0076 2F91      		pop r18
  78 0078 1F91      		pop r17
  79 007a 0F91      		pop r16
  80 007c 0F90      		pop r0
  81 007e 0092 5F00 		sts 95,r0
  82 0082 0F90      		pop r0
  83 0084 1F90      		pop r1
  84 0086 1895      		reti
  86               	.global	__vector_20
  88               	__vector_20:
  89 0088 1F92      		push r1
  90 008a 0F92      		push r0
  91 008c 0090 5F00 		lds r0,95
  92 0090 0F92      		push r0
  93 0092 1124      		clr __zero_reg__
  94 0094 2F93      		push r18
  95 0096 3F93      		push r19
  96 0098 4F93      		push r20
  97 009a 5F93      		push r21
  98 009c 6F93      		push r22
  99 009e 7F93      		push r23
 100 00a0 8F93      		push r24
 101 00a2 9F93      		push r25
 102 00a4 AF93      		push r26
 103 00a6 BF93      		push r27
 104 00a8 EF93      		push r30
 105 00aa FF93      		push r31
 106 00ac CF93      		push r28
 107 00ae DF93      		push r29
 108 00b0 00D0      		rcall .
 109 00b2 CDB7      		in r28,__SP_L__
 110 00b4 DEB7      		in r29,__SP_H__
 111               	/* prologue: Signal */
 112               	/* frame size = 2 */
 113               	/* stack size = 19 */
 114               	.L__stack_usage = 19
 115 00b6 86EC      		ldi r24,lo8(-58)
 116 00b8 90E0      		ldi r25,0
 117 00ba FC01      		movw r30,r24
 118 00bc 8081      		ld r24,Z
 119 00be 8983      		std Y+1,r24
 120 00c0 80EC      		ldi r24,lo8(-64)
 121 00c2 90E0      		ldi r25,0
 122 00c4 FC01      		movw r30,r24
 123 00c6 8081      		ld r24,Z
 124 00c8 8A83      		std Y+2,r24
 125 00ca 8A81      		ldd r24,Y+2
 126 00cc 882F      		mov r24,r24
 127 00ce 90E0      		ldi r25,0
 128 00d0 8871      		andi r24,24
 129 00d2 9927      		clr r25
 130 00d4 892B      		or r24,r25
 131 00d6 01F4      		brne .L4
 132 00d8 6981      		ldd r22,Y+1
 133 00da 80E0      		ldi r24,lo8(TTY_Rx_Buffer)
 134 00dc 90E0      		ldi r25,hi8(TTY_Rx_Buffer)
 135 00de 0E94 0000 		call rb_put
 136               	.L4:
 137               	/* epilogue start */
 138 00e2 0F90      		pop __tmp_reg__
 139 00e4 0F90      		pop __tmp_reg__
 140 00e6 DF91      		pop r29
 141 00e8 CF91      		pop r28
 142 00ea FF91      		pop r31
 143 00ec EF91      		pop r30
 144 00ee BF91      		pop r27
 145 00f0 AF91      		pop r26
 146 00f2 9F91      		pop r25
 147 00f4 8F91      		pop r24
 148 00f6 7F91      		pop r23
 149 00f8 6F91      		pop r22
 150 00fa 5F91      		pop r21
 151 00fc 4F91      		pop r20
 152 00fe 3F91      		pop r19
 153 0100 2F91      		pop r18
 154 0102 0F90      		pop r0
 155 0104 0092 5F00 		sts 95,r0
 156 0108 0F90      		pop r0
 157 010a 1F90      		pop r1
 158 010c 1895      		reti
 160               	.global	uart_init
 162               	uart_init:
 163 010e A2E0      		ldi r26,lo8(2)
 164 0110 B0E0      		ldi r27,0
 165 0112 E0E0      		ldi r30,lo8(gs(1f))
 166 0114 F0E0      		ldi r31,hi8(gs(1f))
 167 0116 0C94 0000 		jmp __prologue_saves__+((18 - 2) * 2)
 168               	1:
 169               	/* prologue: function */
 170               	/* frame size = 2 */
 171               	/* stack size = 4 */
 172               	.L__stack_usage = 4
 173 011a 9A83      		std Y+2,r25
 174 011c 8983      		std Y+1,r24
 175 011e 8981      		ldd r24,Y+1
 176 0120 9A81      		ldd r25,Y+2
 177 0122 9923      		tst r25
 178 0124 04F4      		brge .L7
 179 0126 80EC      		ldi r24,lo8(-64)
 180 0128 90E0      		ldi r25,0
 181 012a 22E0      		ldi r18,lo8(2)
 182 012c FC01      		movw r30,r24
 183 012e 2083      		st Z,r18
 184 0130 8981      		ldd r24,Y+1
 185 0132 9A81      		ldd r25,Y+2
 186 0134 9F77      		andi r25,127
 187 0136 9A83      		std Y+2,r25
 188 0138 8983      		std Y+1,r24
 189               	.L7:
 190 013a 84EC      		ldi r24,lo8(-60)
 191 013c 90E0      		ldi r25,0
 192 013e 2981      		ldd r18,Y+1
 193 0140 3A81      		ldd r19,Y+2
 194 0142 FC01      		movw r30,r24
 195 0144 3183      		std Z+1,r19
 196 0146 2083      		st Z,r18
 197 0148 81EC      		ldi r24,lo8(-63)
 198 014a 90E0      		ldi r25,0
 199 014c 28E9      		ldi r18,lo8(-104)
 200 014e FC01      		movw r30,r24
 201 0150 2083      		st Z,r18
 202 0152 82EC      		ldi r24,lo8(-62)
 203 0154 90E0      		ldi r25,0
 204 0156 26E0      		ldi r18,lo8(6)
 205 0158 FC01      		movw r30,r24
 206 015a 2083      		st Z,r18
 207               	/* epilogue start */
 208 015c 2296      		adiw r28,2
 209 015e E2E0      		ldi r30, lo8(2)
 210 0160 0C94 0000 		jmp __epilogue_restores__ + ((18 - 2) * 2)
 212               	.global	uart_task
 214               	uart_task:
 215 0164 A0E0      		ldi r26,0
 216 0166 B0E0      		ldi r27,0
 217 0168 E0E0      		ldi r30,lo8(gs(1f))
 218 016a F0E0      		ldi r31,hi8(gs(1f))
 219 016c 0C94 0000 		jmp __prologue_saves__+((18 - 2) * 2)
 220               	1:
 221               	/* prologue: function */
 222               	/* frame size = 0 */
 223               	/* stack size = 2 */
 224               	.L__stack_usage = 2
 225 0170 2091 0000 		lds r18,input_handle_func
 226 0174 3091 0000 		lds r19,input_handle_func+1
 227 0178 81E0      		ldi r24,lo8(1)
 228 017a F901      		movw r30,r18
 229 017c 0995      		icall
 230 017e 0E94 0000 		call uart_flush
 231               	/* epilogue start */
 232 0182 E2E0      		ldi r30, lo8(2)
 233 0184 0C94 0000 		jmp __epilogue_restores__ + ((18 - 2) * 2)
 235               	.global	uart_flush
 237               	uart_flush:
 238 0188 A0E0      		ldi r26,0
 239 018a B0E0      		ldi r27,0
 240 018c E0E0      		ldi r30,lo8(gs(1f))
 241 018e F0E0      		ldi r31,hi8(gs(1f))
 242 0190 0C94 0000 		jmp __prologue_saves__+((18 - 2) * 2)
 243               	1:
 244               	/* prologue: function */
 245               	/* frame size = 0 */
 246               	/* stack size = 2 */
 247               	.L__stack_usage = 2
 248 0194 81EC      		ldi r24,lo8(-63)
 249 0196 90E0      		ldi r25,0
 250 0198 FC01      		movw r30,r24
 251 019a 8081      		ld r24,Z
 252 019c 882F      		mov r24,r24
 253 019e 90E0      		ldi r25,0
 254 01a0 8072      		andi r24,32
 255 01a2 9927      		clr r25
 256 01a4 892B      		or r24,r25
 257 01a6 01F4      		brne .L9
 258 01a8 8091 0000 		lds r24,TTY_Tx_Buffer+2
 259 01ac 8823      		tst r24
 260 01ae 01F0      		breq .L9
 261 01b0 81EC      		ldi r24,lo8(-63)
 262 01b2 90E0      		ldi r25,0
 263 01b4 21EC      		ldi r18,lo8(-63)
 264 01b6 30E0      		ldi r19,0
 265 01b8 F901      		movw r30,r18
 266 01ba 2081      		ld r18,Z
 267 01bc 2062      		ori r18,lo8(32)
 268 01be FC01      		movw r30,r24
 269 01c0 2083      		st Z,r18
 270               	.L9:
 271               	/* epilogue start */
 272 01c2 E2E0      		ldi r30, lo8(2)
 273 01c4 0C94 0000 		jmp __epilogue_restores__ + ((18 - 2) * 2)
 275               		.ident	"GCC: (AVR_8_bit_GNU_Toolchain_3.5.0_1662) 4.9.2"
 276               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:00000000 serial.c
C:\Users\Benny\AppData\Local\Temp\ccwaHsrW.s:2      *ABS*:0000003e __SP_H__
C:\Users\Benny\AppData\Local\Temp\ccwaHsrW.s:3      *ABS*:0000003d __SP_L__
C:\Users\Benny\AppData\Local\Temp\ccwaHsrW.s:4      *ABS*:0000003f __SREG__
C:\Users\Benny\AppData\Local\Temp\ccwaHsrW.s:5      *ABS*:00000000 __tmp_reg__
C:\Users\Benny\AppData\Local\Temp\ccwaHsrW.s:6      *ABS*:00000001 __zero_reg__
                            *COM*:00000002 input_handle_func
                            *COM*:00000002 output_flush_func
                            *COM*:00000002 usbinfunc
C:\Users\Benny\AppData\Local\Temp\ccwaHsrW.s:13     .text:00000000 __vector_21
C:\Users\Benny\AppData\Local\Temp\ccwaHsrW.s:88     .text:00000088 __vector_20
C:\Users\Benny\AppData\Local\Temp\ccwaHsrW.s:162    .text:0000010e uart_init
C:\Users\Benny\AppData\Local\Temp\ccwaHsrW.s:214    .text:00000164 uart_task
C:\Users\Benny\AppData\Local\Temp\ccwaHsrW.s:237    .text:00000188 uart_flush

UNDEFINED SYMBOLS
TTY_Tx_Buffer
rb_get
TTY_Rx_Buffer
rb_put
__prologue_saves__
__epilogue_restores__
__do_clear_bss
