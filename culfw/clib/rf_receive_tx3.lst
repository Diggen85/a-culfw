   1               		.file	"rf_receive_tx3.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.comm	packetCheckValues,1,1
   8               		.text
   9               	.global	analyze_tx3
  11               	analyze_tx3:
  12 0000 A1E1      		ldi r26,lo8(17)
  13 0002 B0E0      		ldi r27,0
  14 0004 E0E0      		ldi r30,lo8(gs(1f))
  15 0006 F0E0      		ldi r31,hi8(gs(1f))
  16 0008 0C94 0000 		jmp __prologue_saves__+((18 - 4) * 2)
  17               	1:
  18               	/* prologue: function */
  19               	/* frame size = 17 */
  20               	/* stack size = 21 */
  21               	.L__stack_usage = 21
  22 000c 9B87      		std Y+11,r25
  23 000e 8A87      		std Y+10,r24
  24 0010 7D87      		std Y+13,r23
  25 0012 6C87      		std Y+12,r22
  26 0014 5F87      		std Y+15,r21
  27 0016 4E87      		std Y+14,r20
  28 0018 398B      		std Y+17,r19
  29 001a 288B      		std Y+16,r18
  30 001c 8C85      		ldd r24,Y+12
  31 001e 9D85      		ldd r25,Y+13
  32 0020 FC01      		movw r30,r24
  33 0022 8081      		ld r24,Z
  34 0024 8823      		tst r24
  35 0026 01F0      		breq .+2
  36 0028 00C0      		rjmp .L1
  37 002a 1886      		std Y+8,__zero_reg__
  38 002c 87E0      		ldi r24,lo8(7)
  39 002e 8987      		std Y+9,r24
  40 0030 8A85      		ldd r24,Y+10
  41 0032 9B85      		ldd r25,Y+11
  42 0034 0496      		adiw r24,4
  43 0036 9D83      		std Y+5,r25
  44 0038 8C83      		std Y+4,r24
  45 003a 1B82      		std Y+3,__zero_reg__
  46 003c 8A85      		ldd r24,Y+10
  47 003e 9B85      		ldd r25,Y+11
  48 0040 FC01      		movw r30,r24
  49 0042 8181      		ldd r24,Z+1
  50 0044 8430      		cpi r24,lo8(4)
  51 0046 01F4      		brne .L3
  52 0048 8A85      		ldd r24,Y+10
  53 004a 9B85      		ldd r25,Y+11
  54 004c FC01      		movw r30,r24
  55 004e 8381      		ldd r24,Z+3
  56 0050 8130      		cpi r24,lo8(1)
  57 0052 01F0      		breq .L4
  58               	.L3:
  59 0054 00C0      		rjmp .L1
  60               	.L4:
  61 0056 1982      		std Y+1,__zero_reg__
  62 0058 00C0      		rjmp .L6
  63               	.L9:
  64 005a 8981      		ldd r24,Y+1
  65 005c 8823      		tst r24
  66 005e 01F4      		brne .L7
  67 0060 CE01      		movw r24,r28
  68 0062 0496      		adiw r24,4
  69 0064 41E0      		ldi r20,lo8(1)
  70 0066 67E0      		ldi r22,lo8(7)
  71 0068 0E94 0000 		call getbits
  72 006c 8068      		ori r24,lo8(-128)
  73 006e 8A83      		std Y+2,r24
  74 0070 00C0      		rjmp .L8
  75               	.L7:
  76 0072 CE01      		movw r24,r28
  77 0074 0496      		adiw r24,4
  78 0076 41E0      		ldi r20,lo8(1)
  79 0078 68E0      		ldi r22,lo8(8)
  80 007a 0E94 0000 		call getbits
  81 007e 8A83      		std Y+2,r24
  82               	.L8:
  83 0080 8A81      		ldd r24,Y+2
  84 0082 982F      		mov r25,r24
  85 0084 9295      		swap r25
  86 0086 9F70      		andi r25,lo8(15)
  87 0088 8B81      		ldd r24,Y+3
  88 008a 980F      		add r25,r24
  89 008c 8A81      		ldd r24,Y+2
  90 008e 8F70      		andi r24,lo8(15)
  91 0090 890F      		add r24,r25
  92 0092 8B83      		std Y+3,r24
  93 0094 8981      		ldd r24,Y+1
  94 0096 882F      		mov r24,r24
  95 0098 90E0      		ldi r25,0
  96 009a 2E85      		ldd r18,Y+14
  97 009c 3F85      		ldd r19,Y+15
  98 009e 820F      		add r24,r18
  99 00a0 931F      		adc r25,r19
 100 00a2 2A81      		ldd r18,Y+2
 101 00a4 FC01      		movw r30,r24
 102 00a6 2083      		st Z,r18
 103 00a8 8981      		ldd r24,Y+1
 104 00aa 8F5F      		subi r24,lo8(-(1))
 105 00ac 8983      		std Y+1,r24
 106               	.L6:
 107 00ae 8981      		ldd r24,Y+1
 108 00b0 8430      		cpi r24,lo8(4)
 109 00b2 00F0      		brlo .L9
 110 00b4 8981      		ldd r24,Y+1
 111 00b6 882F      		mov r24,r24
 112 00b8 90E0      		ldi r25,0
 113 00ba 2E85      		ldd r18,Y+14
 114 00bc 3F85      		ldd r19,Y+15
 115 00be 8901      		movw r16,r18
 116 00c0 080F      		add r16,r24
 117 00c2 191F      		adc r17,r25
 118 00c4 CE01      		movw r24,r28
 119 00c6 0496      		adiw r24,4
 120 00c8 41E0      		ldi r20,lo8(1)
 121 00ca 67E0      		ldi r22,lo8(7)
 122 00cc 0E94 0000 		call getbits
 123 00d0 880F      		lsl r24
 124 00d2 F801      		movw r30,r16
 125 00d4 8083      		st Z,r24
 126 00d6 8981      		ldd r24,Y+1
 127 00d8 882F      		mov r24,r24
 128 00da 90E0      		ldi r25,0
 129 00dc 2E85      		ldd r18,Y+14
 130 00de 3F85      		ldd r19,Y+15
 131 00e0 820F      		add r24,r18
 132 00e2 931F      		adc r25,r19
 133 00e4 FC01      		movw r30,r24
 134 00e6 8081      		ld r24,Z
 135 00e8 982F      		mov r25,r24
 136 00ea 9295      		swap r25
 137 00ec 9F70      		andi r25,lo8(15)
 138 00ee 8B81      		ldd r24,Y+3
 139 00f0 890F      		add r24,r25
 140 00f2 8F70      		andi r24,lo8(15)
 141 00f4 8B83      		std Y+3,r24
 142 00f6 8981      		ldd r24,Y+1
 143 00f8 8F5F      		subi r24,lo8(-(1))
 144 00fa 8983      		std Y+1,r24
 145 00fc 8889      		ldd r24,Y+16
 146 00fe 9989      		ldd r25,Y+17
 147 0100 2981      		ldd r18,Y+1
 148 0102 FC01      		movw r30,r24
 149 0104 2083      		st Z,r18
 150 0106 8B81      		ldd r24,Y+3
 151 0108 8295      		swap r24
 152 010a 8F70      		andi r24,lo8(15)
 153 010c 8823      		tst r24
 154 010e 01F4      		brne .L10
 155 0110 8E85      		ldd r24,Y+14
 156 0112 9F85      		ldd r25,Y+15
 157 0114 FC01      		movw r30,r24
 158 0116 8081      		ld r24,Z
 159 0118 8295      		swap r24
 160 011a 8F70      		andi r24,lo8(15)
 161 011c 8A30      		cpi r24,lo8(10)
 162 011e 01F0      		breq .L11
 163               	.L10:
 164 0120 8C85      		ldd r24,Y+12
 165 0122 9D85      		ldd r25,Y+13
 166 0124 24E7      		ldi r18,lo8(116)
 167 0126 FC01      		movw r30,r24
 168 0128 2083      		st Z,r18
 169 012a 00C0      		rjmp .L1
 170               	.L11:
 171 012c 8C85      		ldd r24,Y+12
 172 012e 9D85      		ldd r25,Y+13
 173 0130 24E7      		ldi r18,lo8(116)
 174 0132 FC01      		movw r30,r24
 175 0134 2083      		st Z,r18
 176               	.L1:
 177               	/* epilogue start */
 178 0136 6196      		adiw r28,17
 179 0138 E4E0      		ldi r30, lo8(4)
 180 013a 0C94 0000 		jmp __epilogue_restores__ + ((18 - 4) * 2)
 182               		.ident	"GCC: (AVR_8_bit_GNU_Toolchain_3.5.0_1662) 4.9.2"
 183               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:00000000 rf_receive_tx3.c
C:\Users\Benny\AppData\Local\Temp\ccjmKPGZ.s:2      *ABS*:0000003e __SP_H__
C:\Users\Benny\AppData\Local\Temp\ccjmKPGZ.s:3      *ABS*:0000003d __SP_L__
C:\Users\Benny\AppData\Local\Temp\ccjmKPGZ.s:4      *ABS*:0000003f __SREG__
C:\Users\Benny\AppData\Local\Temp\ccjmKPGZ.s:5      *ABS*:00000000 __tmp_reg__
C:\Users\Benny\AppData\Local\Temp\ccjmKPGZ.s:6      *ABS*:00000001 __zero_reg__
                            *COM*:00000001 packetCheckValues
C:\Users\Benny\AppData\Local\Temp\ccjmKPGZ.s:11     .text:00000000 analyze_tx3

UNDEFINED SYMBOLS
__prologue_saves__
getbits
__epilogue_restores__
__do_clear_bss
