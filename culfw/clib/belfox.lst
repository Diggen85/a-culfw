   1               		.file	"belfox.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.comm	packetCheckValues,1,1
   8               		.text
  10               	send_sync:
  11 0000 A0E0      		ldi r26,0
  12 0002 B0E0      		ldi r27,0
  13 0004 E0E0      		ldi r30,lo8(gs(1f))
  14 0006 F0E0      		ldi r31,hi8(gs(1f))
  15 0008 0C94 0000 		jmp __prologue_saves__+((18 - 2) * 2)
  16               	1:
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 2 */
  20               	.L__stack_usage = 2
  21 000c 85E2      		ldi r24,lo8(37)
  22 000e 90E0      		ldi r25,0
  23 0010 25E2      		ldi r18,lo8(37)
  24 0012 30E0      		ldi r19,0
  25 0014 F901      		movw r30,r18
  26 0016 2081      		ld r18,Z
  27 0018 2860      		ori r18,lo8(8)
  28 001a FC01      		movw r30,r24
  29 001c 2083      		st Z,r18
  30 001e 88EE      		ldi r24,lo8(-24)
  31 0020 93E0      		ldi r25,lo8(3)
  32 0022 0E94 0000 		call my_delay_us
  33               	/* epilogue start */
  34 0026 E2E0      		ldi r30, lo8(2)
  35 0028 0C94 0000 		jmp __epilogue_restores__ + ((18 - 2) * 2)
  38               	send_bit:
  39 002c A1E0      		ldi r26,lo8(1)
  40 002e B0E0      		ldi r27,0
  41 0030 E0E0      		ldi r30,lo8(gs(1f))
  42 0032 F0E0      		ldi r31,hi8(gs(1f))
  43 0034 0C94 0000 		jmp __prologue_saves__+((18 - 2) * 2)
  44               	1:
  45               	/* prologue: function */
  46               	/* frame size = 1 */
  47               	/* stack size = 3 */
  48               	.L__stack_usage = 3
  49 0038 8983      		std Y+1,r24
  50 003a 85E2      		ldi r24,lo8(37)
  51 003c 90E0      		ldi r25,0
  52 003e 25E2      		ldi r18,lo8(37)
  53 0040 30E0      		ldi r19,0
  54 0042 F901      		movw r30,r18
  55 0044 2081      		ld r18,Z
  56 0046 277F      		andi r18,lo8(-9)
  57 0048 FC01      		movw r30,r24
  58 004a 2083      		st Z,r18
  59 004c 8981      		ldd r24,Y+1
  60 004e 8823      		tst r24
  61 0050 01F0      		breq .L3
  62 0052 88EE      		ldi r24,lo8(-24)
  63 0054 93E0      		ldi r25,lo8(3)
  64 0056 00C0      		rjmp .L4
  65               	.L3:
  66 0058 80ED      		ldi r24,lo8(-48)
  67 005a 97E0      		ldi r25,lo8(7)
  68               	.L4:
  69 005c 0E94 0000 		call my_delay_us
  70 0060 85E2      		ldi r24,lo8(37)
  71 0062 90E0      		ldi r25,0
  72 0064 25E2      		ldi r18,lo8(37)
  73 0066 30E0      		ldi r19,0
  74 0068 F901      		movw r30,r18
  75 006a 2081      		ld r18,Z
  76 006c 2860      		ori r18,lo8(8)
  77 006e FC01      		movw r30,r24
  78 0070 2083      		st Z,r18
  79 0072 8981      		ldd r24,Y+1
  80 0074 8823      		tst r24
  81 0076 01F0      		breq .L5
  82 0078 80ED      		ldi r24,lo8(-48)
  83 007a 97E0      		ldi r25,lo8(7)
  84 007c 00C0      		rjmp .L6
  85               	.L5:
  86 007e 88EE      		ldi r24,lo8(-24)
  87 0080 93E0      		ldi r25,lo8(3)
  88               	.L6:
  89 0082 0E94 0000 		call my_delay_us
  90               	/* epilogue start */
  91 0086 2196      		adiw r28,1
  92 0088 E2E0      		ldi r30, lo8(2)
  93 008a 0C94 0000 		jmp __epilogue_restores__ + ((18 - 2) * 2)
  95               	.global	send_belfox
  97               	send_belfox:
  98 008e A6E0      		ldi r26,lo8(6)
  99 0090 B0E0      		ldi r27,0
 100 0092 E0E0      		ldi r30,lo8(gs(1f))
 101 0094 F0E0      		ldi r31,hi8(gs(1f))
 102 0096 0C94 0000 		jmp __prologue_saves__+((18 - 2) * 2)
 103               	1:
 104               	/* prologue: function */
 105               	/* frame size = 6 */
 106               	/* stack size = 8 */
 107               	.L__stack_usage = 8
 108 009a 9E83      		std Y+6,r25
 109 009c 8D83      		std Y+5,r24
 110 009e 84E0      		ldi r24,lo8(4)
 111 00a0 8983      		std Y+1,r24
 112 00a2 8D81      		ldd r24,Y+5
 113 00a4 9E81      		ldd r25,Y+6
 114 00a6 6EE0      		ldi r22,lo8(14)
 115 00a8 70E0      		ldi r23,0
 116 00aa 0E94 0000 		call strnlen
 117 00ae 8150      		subi r24,lo8(-(-1))
 118 00b0 8C83      		std Y+4,r24
 119 00b2 8C81      		ldd r24,Y+4
 120 00b4 8C30      		cpi r24,lo8(12)
 121 00b6 01F0      		breq .L8
 122 00b8 00C0      		rjmp .L7
 123               	.L8:
 124 00ba 85E2      		ldi r24,lo8(37)
 125 00bc 90E0      		ldi r25,0
 126 00be 25E2      		ldi r18,lo8(37)
 127 00c0 30E0      		ldi r19,0
 128 00c2 F901      		movw r30,r18
 129 00c4 2081      		ld r18,Z
 130 00c6 2160      		ori r18,lo8(1)
 131 00c8 FC01      		movw r30,r24
 132 00ca 2083      		st Z,r18
 133 00cc 8091 0000 		lds r24,cc_on
 134 00d0 8823      		tst r24
 135 00d2 01F4      		brne .L10
 136 00d4 0E94 0000 		call set_ccon
 137               	.L10:
 138 00d8 0E94 0000 		call ccTX
 139               	.L14:
 140 00dc 0E94 0000 		call send_sync
 141 00e0 81E0      		ldi r24,lo8(1)
 142 00e2 90E0      		ldi r25,0
 143 00e4 9B83      		std Y+3,r25
 144 00e6 8A83      		std Y+2,r24
 145 00e8 00C0      		rjmp .L11
 146               	.L13:
 147 00ea 8A81      		ldd r24,Y+2
 148 00ec 9B81      		ldd r25,Y+3
 149 00ee 2D81      		ldd r18,Y+5
 150 00f0 3E81      		ldd r19,Y+6
 151 00f2 820F      		add r24,r18
 152 00f4 931F      		adc r25,r19
 153 00f6 FC01      		movw r30,r24
 154 00f8 9081      		ld r25,Z
 155 00fa 81E0      		ldi r24,lo8(1)
 156 00fc 9133      		cpi r25,lo8(49)
 157 00fe 01F0      		breq .L12
 158 0100 80E0      		ldi r24,0
 159               	.L12:
 160 0102 0E94 0000 		call send_bit
 161 0106 8A81      		ldd r24,Y+2
 162 0108 9B81      		ldd r25,Y+3
 163 010a 0196      		adiw r24,1
 164 010c 9B83      		std Y+3,r25
 165 010e 8A83      		std Y+2,r24
 166               	.L11:
 167 0110 8A81      		ldd r24,Y+2
 168 0112 9B81      		ldd r25,Y+3
 169 0114 0D97      		sbiw r24,13
 170 0116 04F0      		brlt .L13
 171 0118 85E2      		ldi r24,lo8(37)
 172 011a 90E0      		ldi r25,0
 173 011c 25E2      		ldi r18,lo8(37)
 174 011e 30E0      		ldi r19,0
 175 0120 F901      		movw r30,r18
 176 0122 2081      		ld r18,Z
 177 0124 277F      		andi r18,lo8(-9)
 178 0126 FC01      		movw r30,r24
 179 0128 2083      		st Z,r18
 180 012a 83E2      		ldi r24,lo8(35)
 181 012c 0E94 0000 		call my_delay_ms
 182 0130 8981      		ldd r24,Y+1
 183 0132 8150      		subi r24,lo8(-(-1))
 184 0134 8983      		std Y+1,r24
 185 0136 8981      		ldd r24,Y+1
 186 0138 8823      		tst r24
 187 013a 01F4      		brne .L14
 188 013c 8091 0000 		lds r24,tx_report
 189 0140 8823      		tst r24
 190 0142 01F0      		breq .L15
 191 0144 0E94 0000 		call ccRX
 192 0148 00C0      		rjmp .L16
 193               	.L15:
 194 014a 86E3      		ldi r24,lo8(54)
 195 014c 0E94 0000 		call ccStrobe
 196               	.L16:
 197 0150 85E2      		ldi r24,lo8(37)
 198 0152 90E0      		ldi r25,0
 199 0154 25E2      		ldi r18,lo8(37)
 200 0156 30E0      		ldi r19,0
 201 0158 F901      		movw r30,r18
 202 015a 2081      		ld r18,Z
 203 015c 2E7F      		andi r18,lo8(-2)
 204 015e FC01      		movw r30,r24
 205 0160 2083      		st Z,r18
 206               	.L7:
 207               	/* epilogue start */
 208 0162 2696      		adiw r28,6
 209 0164 E2E0      		ldi r30, lo8(2)
 210 0166 0C94 0000 		jmp __epilogue_restores__ + ((18 - 2) * 2)
 212               		.ident	"GCC: (AVR_8_bit_GNU_Toolchain_3.5.0_1662) 4.9.2"
 213               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:00000000 belfox.c
C:\Users\Benny\AppData\Local\Temp\ccuCfCAX.s:2      *ABS*:0000003e __SP_H__
C:\Users\Benny\AppData\Local\Temp\ccuCfCAX.s:3      *ABS*:0000003d __SP_L__
C:\Users\Benny\AppData\Local\Temp\ccuCfCAX.s:4      *ABS*:0000003f __SREG__
C:\Users\Benny\AppData\Local\Temp\ccuCfCAX.s:5      *ABS*:00000000 __tmp_reg__
C:\Users\Benny\AppData\Local\Temp\ccuCfCAX.s:6      *ABS*:00000001 __zero_reg__
                            *COM*:00000001 packetCheckValues
C:\Users\Benny\AppData\Local\Temp\ccuCfCAX.s:10     .text:00000000 send_sync
C:\Users\Benny\AppData\Local\Temp\ccuCfCAX.s:38     .text:0000002c send_bit
C:\Users\Benny\AppData\Local\Temp\ccuCfCAX.s:97     .text:0000008e send_belfox

UNDEFINED SYMBOLS
__prologue_saves__
my_delay_us
__epilogue_restores__
strnlen
cc_on
set_ccon
ccTX
my_delay_ms
tx_report
ccRX
ccStrobe
__do_clear_bss
